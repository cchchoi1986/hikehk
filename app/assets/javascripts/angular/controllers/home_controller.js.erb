app.controller('HomeCtrl', ['$scope', '$http', '$routeParams', 'uiGmapGoogleMapApi', '$timeout', 'WeatherServices', '$sce', function($scope, $http, $routeParams, uiGmapGoogleMapApi, $timeout, WeatherServices, $sce){
  
  $scope.small = true;
  $scope.switchSmall = function (){
    $scope.small = !$scope.small;
    console.log('small clicked');
  }

  $scope.regionCheck = function(i) {
    $scope.search_parameters.regions[i].checked = !$scope.search_parameters.regions[i].checked;
  };

  $scope.parseURL = function(url){
    return url.replace(/\//g,'%252F');
  }

  var homeMap = {
    center: { 
      // latitude: 22.3991729, //tai lam country park
      // longitude: 114.1320305
      latitude: 22.387118,
      longitude: 114.1953501
    },
    zoom: 11,
    // bounds: {
    //   latitude: 22.1634178, 
    //   longitude: 113.5629425
    // }
  };
  var hikeMapStyle = [
    {
      "featureType":"landscape.natural",
      "elementType":"geometry.fill",
      "stylers":[
        {"visibility":"on"},
        {"color":"#e0efef"}
      ]
    },
    {
      "featureType":"poi",
      "elementType":"geometry.fill",
      "stylers":[
        {"visibility":"on"},
        {"hue":"#1900ff"},
        {"color":"#c0e8e8"}
      ]
    },
    {
      "featureType":"road",
      "elementType":"geometry",
      "stylers":[
        {"lightness":100},
        {"visibility":"simplified"}
      ]
    },
    {
      "featureType":"road",
      "elementType":"labels",
      "stylers":[
        {"visibility":"off"}
      ]
    },
    {
      "featureType":"transit.line",
      "elementType":"geometry",
      "stylers":[
        {"visibility":"on"},
        {"lightness":700}
      ]
    },
    {
      "featureType":"water",
      "elementType":"all",
      "stylers":[
        {"color":"#7dcdcd"}
      ]
    }
  ];
  $scope.map = homeMap; 
  $scope.loading = false;
  $scope.outBox = true;
  $scope.showHide = "glyphicon-minus";
  $scope.search = true;
  $scope.trailPanel = false;
  $scope.zero = false;
  $scope.options = {
    scrollwheel: true,
    styles: hikeMapStyle,
    panControl:false,
    zoomControl:true,
    zoomControlOptions: {
        style: google.maps.ZoomControlStyle.SMALL,
        position: google.maps.ControlPosition.LEFT_BOTTOM
    },
    mapTypeControl:false,
    scaleControl:false,
    streetViewControl:false,
    minZoom: 10,
    maxZoom: 16
  };
  $scope.trailMarkers = [];
  $scope.search_parameters = {
    distance: 24,
    duration: 10,
    difficulty: 5,
    scenery: 5,
    regions: [
      { text: "HK", checked: true },
      { text: "KLN", checked: true },
      { text: "N.T.", checked: true }
    ]
  }
  // slider for distance (km)
  $scope.sliderDistanceConfig = {
      min: 0,
      max: 24,
      step: 1,
      value: 24
  }
  // slider for durations (hours)
  $scope.sliderDurationConfig = {
      min: 0,
      max: 10,
      step: 0.5,
      value: 10
  }
  // slider for difficulties (0-5)
  $scope.sliderDifficultConfig = {
      min: 0,
      max: 5,
      step: 0.5,
      value: 5
  }
  // slider for scenery (0-5)
  $scope.sliderSceneryConfig = {
      min: 0,
      max: 5,
      step: 0.5,
      value: 5
  }
  // initial markers set, see html models = 'trails'
  var generateMarkers = function (data){
    // console.log(data);
    $scope.trailMarkers = [];
    for (i = 0; i < data.length; i++){
      // var someId = data[i].id;
      $scope.trailMarkers.push({
        title: data[i].name,
        latitude: data[i].start_coordinates.latitude, 
        longitude: data[i].start_coordinates.longitude,
        id: data[i].id,
        icon: "<%=asset_path('hike_marker.png')%>",
        animation: "Animation.BOUNCE",
        click: function(someId) {
          console.log(someId.key);
          $scope.openTrailPanel(someId.key);
        }
      })
    }
  };
  $scope.markersEvents = {
    mouseover: function (gMarker, eventName, model) {
      console.log("meow");
      model.show = true;
      $scope.$apply();
    },
    mouseout: function (gMarker, eventName, model) {
      console.log("meow out");
      model.show = false;
      $scope.$apply();
    }
  };
  // the toggle function that show and hide the filter
  $scope.showbox = function(){
    $scope.outBox = !$scope.outBox;
    if ($scope.outBox == true){
      $scope.showHide = "glyphicon-minus";
    }
    else if($scope.outBox == false){
      $scope.showHide = "glyphicon-plus";
    }
  }
  $scope.goHome = function(){
    // console.log('go home clicked');
    // $scope.map = homeMap; 
    $scope.polylines = [];
    $scope.map.center.latitude = 22.387118;
    $scope.map.center.longitude = 114.1953501;
    $scope.map.zoom = 11;
    $scope.search = true;
    $scope.trailPanel = false;
    $scope.moreClicked = false;
    $scope.morePlantClicked = false;
    $scope.plantLimit = 4;
    $scope.birdLimit = 4;
  }
  // Weather service functions to get weather details
  var getWeather = function(lat, lon){
    console.log("weather gets called");
    WeatherServices.returnWeather(lat, lon).success(function(data){
      $scope.weatherInfo = WeatherServices.processData(data)
    });
  }
  // this is an array of coordinates for the polylines
  var makeCoord = function(array) {
    new_array = [];
    for (var i =0; i < array.length; i++){
      new_array.push({ latitude: array[i].split(',')[0], longitude: array[i].split(',')[1]});
    }
    return new_array;
  }
  var generateTrailRoutes = function (data){
    // console.log("generate trail routes", data);
    $scope.polylines = [
    {
        id: 1,
        path: makeCoord(data.trail_coordinates), 
        stroke: {
            color: 'red',
            weight: 2
        },
        editable: false,
        draggable: false,
        geodesic: false,
        visible: true,
        icons: [{
            icon: {
                // path: google.maps.SymbolPath.BACKWARD_OPEN_ARROW
            },
            offset: '25px',
            repeat: '50px',
        }]
    }];
    // console.log("polyline", $scope.polylines);
  };
  $scope.openTrailPanel = function(id){
    console.log('trail id', id);
    $http.get('/trails/'+ id).success(function(data, status, xhr) {
      $scope.oneTrail = data;
      console.log($scope.oneTrail);
      $scope.map.center.latitude = $scope.oneTrail.start_coordinates.latitude;
      $scope.map.center.longitude = $scope.oneTrail.start_coordinates.longitude;
      generateTrailRoutes($scope.oneTrail);
      $scope.map.zoom = 15;
      $scope.search = false;
      $scope.trailPanel = true;
      getWeather($scope.oneTrail.start_coordinates.latitude, $scope.oneTrail.start_coordinates.longitude);
    })
  }
  $scope.makeStars = function(factor) {
    // console.log('factor:',factor);
    var range = 5.0;
    var wholeDiff = range - factor;
    stars = "";
    for (var i = factor; i > 0; i--) {
      if (i == 0.5) {
        stars = stars + "<li class='icon fa fa-star-half-empty'></li>";
      } else {
        stars = stars + "<li class='icon fa fa-star'></li>";
      }
    }
    for (var i = wholeDiff; i > 0.5; i--) {
      stars = stars + "<li class='icon fa fa-star-o'></li>";
    }
    // must trust html for it to show up
    return $sce.trustAsHtml(stars);
  }
  $scope.birdLimit = 4;
  $scope.moreBirdPicture = function(length) {
    // console.log("more bird picture clicked");
    $scope.birdLimit = length;
    $scope.moreClicked = true;
  }
  $scope.plantLimit = 4;
  $scope.morePlantPicture = function(length) {
    // console.log("more plant picture clicked");
    $scope.plantLimit = length;
    $scope.morePlantClicked = !$scope.morePlantClicked;
  }

  var timeOut = 1000;
  var timeoutPromise;
  var getParams = function(){
    $scope.loading = true;
    $timeout.cancel(timeoutPromise);
    timeoutPromise = $timeout(function(){   //Set timeout
      // console.log("getParams function at work");
      submitParams();
    }, timeOut);
  }
  var submitParams = function() {
    var url = "/search?" + 
      "duration=" + $scope.search_parameters.duration +
      "&difficulty=" + $scope.search_parameters.difficulty +
      "&scenery=" + $scope.search_parameters.scenery +
      "&distance=" + $scope.search_parameters.distance +
      "&hk=" + $scope.search_parameters.regions[0].checked +
      "&kln=" + $scope.search_parameters.regions[1].checked +
      "&nt=" + $scope.search_parameters.regions[2].checked;
    $http.get(url).success(function(data, status, xhr){
        // console.log("submit parmas data is ", data);
        $scope.trails = data.trails;
        console.log("length ", $scope.trails.length);
        generateMarkers($scope.trails);
        $scope.loading = false;
        if (data.trails.length == 0){
          $scope.zero = true;
        }
        else {
          $scope.zero = false;
        }
        $scope.goHome();
    })
  }
  $scope.$watch("search_parameters.difficulty", function() {
    getParams();
  });
  $scope.$watch("search_parameters.duration", function() {
    getParams();
  });
  $scope.$watch("search_parameters.distance", function() {
    getParams();
  });
  $scope.$watch("search_parameters.scenery", function() {
    getParams();
  });
  $scope.$watch("search_parameters.regions[0].checked", function() {
    getParams();
  });
  $scope.$watch("search_parameters.regions[1].checked", function() {
    getParams();
  });
  $scope.$watch("search_parameters.regions[2].checked", function() {
    getParams();
  });
}]);

